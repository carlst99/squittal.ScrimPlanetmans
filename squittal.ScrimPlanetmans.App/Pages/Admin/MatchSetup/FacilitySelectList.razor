@using System.Linq;
@using System.Collections.Generic;
@using System.Diagnostics;
@using squittal.ScrimPlanetmans.App.Models.Planetside
@using squittal.ScrimPlanetmans.App.ScrimMatch.Models
@using squittal.ScrimPlanetmans.App.Services.Planetside.Interfaces

@inject IFacilityService FacilityService
@inject IZoneService ZoneService

@if (_mapRegions == null || _zones == null)
{
    <div class="styled-select placeholder">Select Base...</div>
}
else
{
<EditForm Model="@_matchConfiguration">
        <InputSelect class="btn-sm" style="margin-right: 5px; width: 249px;"  @bind-Value=@_matchConfiguration.FacilityIdString>

            <option value=@_noFacilitIdValue>No Base</option>

            @foreach (var zone in _mapZones)
            {
                <optgroup label="@(_zones.Where(z => zone == z.Id).Select(z => z.Name).FirstOrDefault())" style="background-color: var(--sq-bg-white-unlit); color: var(--sq-pink); font-size: 1rem;"/>

                @foreach (var region in _mapRegions.Where(r => r.ZoneId == zone))
                {
                    <option value=@region.Id label="@region.FacilityName">@region.FacilityName</option>
                }
            }
        </InputSelect>
    @*</div>*@
</EditForm>
}

@code {
    private List<MapRegion> _mapRegions { get; set; } = new List<MapRegion>();

    private List<int> _mapZones { get; set; } = new List<int>();

    private List<Zone> _zones { get; set; } = new List<Zone>();

    private int _selectedFacilityId { get; set; }

    private MatchConfiguration _matchConfiguration { get; set; } = new MatchConfiguration();

    private string _noFacilitIdValue { get; set; } = "-1";

    protected override async Task OnInitializedAsync()
    {
        var zones = await ZoneService.GetAllZonesAsync();
        _zones = zones.ToList();

        var mapRegions = await FacilityService.GetScrimmableMapRegionsAsync();
        var _mapRegions = mapRegions.OrderBy(r => r.FacilityName).ToList();

        _mapZones = _mapRegions.Select(r => r.ZoneId).Distinct().ToList();
    }

    void OnFacilityIdChange()
    {

    }
}
